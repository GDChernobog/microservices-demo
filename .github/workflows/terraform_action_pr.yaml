name: GKE Cluster Creation PR
#
#on:
#  push:
#    branches:
#      - master
#
#jobs:
#  terraform:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up Terraform
#        uses: hashicorp/setup-terraform@v1
#        with:
#          terraform_version: 1.1.0
#
#
#      - name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          credentials_json: '${{ secrets.GD_GCP_GRIDU_DEVOPS_T1_T2 }}'
#
#      - name: Initialize Terraform
#        run: terraform -chdir=${{ secrets.TF_DIR_PR }} init --reconfigure
#
#      - name: Format Terraform Code
#        run: terraform -chdir=${{ secrets.TF_DIR_PR }} fmt
#
#      - name: Terraform Plan
#        run: terraform -chdir=${{ secrets.TF_DIR_PR }} plan
#
#      - name: Apply Terraform
#        run: terraform -chdir=${{ secrets.TF_DIR_PR }} apply -auto-approve





on:
  push:
    branches:
      - "*"  # run for all branches

jobs:
  terraform:
    runs-on: ubuntu-latest
  environment:
    name: production

  permissions:
    contents: read
    pull-requests: write
    #url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GD_GCP_GRIDU_DEVOPS_T1_T2 }}'

      - name: Initialize Terraform
        run: terraform -chdir=${{ secrets.TF_DIR_PR }} init --reconfigure

      - name: Format Terraform Code
        run: terraform -chdir=${{ secrets.TF_DIR_PR }} fmt

      - name: Terraform Plan
        run: terraform -chdir=${{ secrets.TF_DIR_PR }} plan -out=tfplan

      # Outputs the plan data for manual review
      - name: Output Terraform Plan Result
        run: |
          echo "Terraform plan output:"
          terraform show -chdir=${{ secrets.TF_DIR_PR }} tfplan

      # This step will pause the workflow and wait for a manual approval if it's not the master branch.
      - name: Wait for Manual Approval
        if: github.ref == 'refs/heads/master'
        run: echo "Waiting for manual approval of the Terraform plan."

      # Actual deployment step that applies the Terraform plan
      - name: Apply Terraform
        if: github.ref != 'refs/heads/master'
        run: terraform -chdir=${{ secrets.TF_DIR_PR }} apply -auto-approve tfplan



#      - name: Upload Terraform Plan
#        uses: actions/upload-artifact@v2
#        with:
#          name: terraform-plan
#          path: tfplan
#
#      - name: Manual Approval for Apply
#        uses: actions/github-script@0.9.0
#        with:
#          script: |
#            const issue = await github.issues.create({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              title: 'Terraform Apply Approval Required',
#              body: 'Please review the Terraform plan and approve.'
#            });
#            console.log('Issue created: ' + issue.data.html_url);
#
#      - name: Apply Terraform
#        run: terraform -chdir=${{ secrets.TF_DIR }} apply tfplan
#        if: github.event.issue.comment.body == 'approve'

